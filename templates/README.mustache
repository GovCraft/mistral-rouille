# Mistral Rouille
Mistral Rouille is a Rust crate customized from Mistral's official OpenAPI specification. This crate provides a convenient and type-safe interface for interacting with Mistral's API, utilizing the Reqwest crate for HTTP requests. Designed to be easily integrated into your Rust projects, Mistral Rouille offers robust functionality for all Mistral API endpoints, ensuring seamless communication with the configured endpoint.

## Overview

This API client was generated by the [OpenAPI Generator](https://openapi-generator.tech) project and then customized with Mustache templates to clean up the ergonomics.

{{#appDescriptionWithNewLines}}
    {{{.}}}
{{/appDescriptionWithNewLines}}

{{#infoUrl}}
    For more information, please visit [{{{infoUrl}}}]({{{infoUrl}}})
{{/infoUrl}}

## Overview

This API client was generated by the [OpenAPI Generator](https://openapi-generator.tech) project.  By using the [openapi-spec](https://openapis.org) from a remote server, you can easily generate an API client.

- API version: {{{appVersion}}}
- Package version: {{{packageVersion}}}
{{^hideGenerationTimestamp}}
    - Build date: {{{generatedDate}}}
{{/hideGenerationTimestamp}}
- Generator version: {{generatorVersion}}
- Build package: `{{{generatorClass}}}`

Either run:
```shell
cargo add {{{packageName}}}
```
or add
```toml
{{{packageName}}} = "{{{packageVersion}}}"
```
to Cargo.toml

## Documentation for API Endpoints

All URIs are relative to *https://api.mistral.ai/v1* or *https://codestral.mistral.ai/v1* if you're using Codestral

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}*{{{classname}}}* | [**{{{operationId}}}**]({{{apiDocPath}}}{{classname}}.md#{{{operationIdLowerCase}}}) | **{{{httpMethod}}}** {{{path}}} | {{{summary}}}
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}

## Documentation For Models

{{#models}}{{#model}} - [{{{classname}}}]({{{modelDocPath}}}{{{classname}}}.md)
{{/model}}{{/models}}

To get access to the crate's generated documentation, use:

```
cargo doc --open
```

## Author

{{#apiInfo}}{{#apis}}{{#-last}}{{{infoEmail}}}
{{/-last}}{{/apis}}{{/apiInfo}}
